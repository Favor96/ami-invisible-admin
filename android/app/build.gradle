import java.util.Properties
import java.io.FileInputStream
plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")

println "üîé key.properties path: ${keystorePropertiesFile.absolutePath}"

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    println "‚úÖ Loaded keystore properties: $keystoreProperties"
} else {
    println "‚ùå Fichier key.properties introuvable √† : ${keystorePropertiesFile.absolutePath}"
}

android {
    namespace = "com.favor.amiinvisibleadmin"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "com.favor.amiinvisibleadmin"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode.toInteger()
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties["keyAlias"]?.toString()
            keyPassword = keystoreProperties["keyPassword"]?.toString()
            storeFile = file(keystoreProperties["storeFile"]?.toString())
            storePassword = keystoreProperties["storePassword"]?.toString()
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.getByName("release")
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}

apply plugin: 'com.google.gms.google-services'
